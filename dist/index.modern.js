import{P2PKH as o,LockingScript as n,Transaction as t,SatoshisPerKilobyte as e}from"@bsv/sdk";import{Sigma as c}from"sigma-protocol";const s=o=>{const n=[];for(let t=0,e=o.length;t<e;t++){const e=Number(o.charCodeAt(t)).toString(16);n.push(e)}return n.join("")};class i extends o{lock(t,e,c,i){let r="";if(void 0!==e&&void 0!==c){const o=s("ord"),n=Buffer.from(e,"base64").toString("hex").trim();r=`OP_0 OP_IF ${o} OP_1 ${s(c)} OP_0 ${n?`${n} `:""}OP_ENDIF`}let a=`${r?`${r} `:""}${(new o).lock(t).toASM()}`;if(null!=i&&i.app&&null!=i&&i.type){a=`${a} OP_RETURN ${s("1PuQa7K62MiKCtssSLKy1kh56WWU7MtUR5")} ${s("SET")}`;for(const[o,n]of Object.entries(i))"cmd"!==o&&(a=`${a} ${s(o)} ${s(n)}`)}return n.fromASM(a)}}const r=async(o,n,e,c)=>{const s={sourceTransaction:t.fromHex(o.rawTxHex),sourceOutputIndex:o.vout,sequence:0},r=(new i).lock(n,null==e?void 0:e.dataB64,null==e?void 0:e.contentType,c);return new t(1,[s],[{satoshis:1,lockingScript:r}],0)},a=async(n,s,r,a,u,l,p,w,f=[])=>{const g=new e(l||10),k=n.map(n=>({sourceTransaction:t.fromHex(n.rawTxHex),sourceOutputIndex:n.vout,unlockingScriptTemplate:(new o).unlock(r),sequence:4294967295}));u.length>100&&console.warn("Creating many inscriptions at once can be slow. Consider using multiple transactions instead.");const d=[];for(const o of u){const n=(new i).lock(s,o.dataB64,o.contentType,p);d.push({satoshis:1,lockingScript:n})}for(const n of f)d.push({satoshis:n.amount,lockingScript:(new o).lock(n.to)});const h=(new o).lock(a);d.push({lockingScript:h,change:!0});let m=new t(1,k,d,0);const x=null==w?void 0:w.idKey,S=null==w?void 0:w.keyHost;if(x){const o=new c(m),{signedTx:n}=o.sign(x);m=n}else if(S){const o=null==w?void 0:w.authToken,n=new c(m);try{const{signedTx:t}=await n.remoteSign(S,o);m=t}catch(o){throw console.log(o),new Error(`Remote signing to ${S} failed`)}}return await m.fee(g),await m.sign(),m},u=async(c,s,r,a,u,l,p,w,f,g=[])=>{const k=new e(p||10),d=[];for(const o of s){const e=t.fromHex(o.rawTxHex),c={sourceTransaction:e,sourceOutputIndex:o.vout,unlockingScriptTemplate:(new i).unlock(u,void 0,void 0,void 0,n.fromASM(e.outputs[o.vout].lockingScript.toASM())),sequence:4294967295};d.push(c)}for(const n of c){const e={sourceTransaction:t.fromHex(n.rawTxHex),sourceOutputIndex:n.vout,unlockingScriptTemplate:(new o).unlock(r),sequence:4294967295};d.push(e)}const h=[];for(const n of s){let n;n=null!=w&&w.dataB64&&null!=w&&w.contentType?(new i).lock(l,w.dataB64,w.contentType,f):(new o).lock(l),h.push({satoshis:1,lockingScript:n})}for(const n of g)h.push({satoshis:n.amount,lockingScript:(new o).lock(n.to)});const m=(new o).lock(a);h.push({lockingScript:m,change:!0});const x=new t(1,d,h,0);return await x.fee(k),await x.sign(),x},l=async(n,c,s,i,r)=>{const a=new e(i||10),u=n.map(n=>({sourceTransaction:t.fromHex(n.rawTxHex),sourceOutputIndex:n.vout,unlockingScriptTemplate:(new o).unlock(c),sequence:4294967295})),l=[],p={satoshis:r,lockingScript:(new o).lock(s)};l.push(p);const w=c.toAddress().toString(),f=(new o).lock(w);l.push({lockingScript:f,change:!0});const g=new t(1,u,l,0);return await g.fee(a),await g.sign(),g};export{r as buildReinscriptionTemplate,a as createOrdinal,l as sendUtxos,u as transferOrdinal};
//# sourceMappingURL=index.modern.js.map
