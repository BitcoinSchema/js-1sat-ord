import{P2PKH as n,LockingScript as t,SatoshisPerKilobyte as o,Transaction as e,fromUtxo as i}from"@bsv/sdk";import{Sigma as r}from"sigma-protocol";function s(){return s=Object.assign?Object.assign.bind():function(n){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var e in o)({}).hasOwnProperty.call(o,e)&&(n[e]=o[e])}return n},s.apply(null,arguments)}const c=n=>{const t=[];for(let o=0,e=n.length;o<e;o++){const e=Number(n.charCodeAt(o)).toString(16);t.push(e)}return t.join("")};class a extends n{lock(o,e,i,r){let s="";if(void 0!==e&&void 0!==i){const n=c("ord"),t=Buffer.from(e,"base64").toString("hex").trim();if(!t)throw new Error("Invalid file data");const o=c(i);if(!o)throw new Error("Invalid media type");s=`OP_0 OP_IF ${n} OP_1 ${o} OP_0 ${t} OP_ENDIF`}let a=`${s?`${s} `:""}${(new n).lock(o).toASM()}`;if(r&&(!r.app||!r.type))throw new Error("MAP.app and MAP.type are required fields");if(null!=r&&r.app&&null!=r&&r.type){a=`${a} OP_RETURN ${c("1PuQa7K62MiKCtssSLKy1kh56WWU7MtUR5")} ${c("SET")}`;for(const[n,t]of Object.entries(r))"cmd"!==n&&(a=`${a} ${c(n)} ${c(t)}`)}return t.fromASM(a)}}const l=async(t,i,s,c,l,d,u,p=[])=>{const w=new o(l||10);let g=new e;for(const o of t){const t=f(o,(new n).unlock(s));g.addInput(t)}i.length>100&&console.warn("Creating many inscriptions at once can be slow. Consider using multiple transactions instead.");for(const n of i){if(!n.inscription)throw new Error("Inscription is required for all destinations");g.addOutput({satoshis:1,lockingScript:(new a).lock(n.address,n.inscription.dataB64,n.inscription.contentType,d)})}for(const t of p)g.addOutput({satoshis:t.amount,lockingScript:(new n).lock(t.to)});g.addOutput({lockingScript:(new n).lock(c),change:!0});const h=null==u?void 0:u.idKey,k=null==u?void 0:u.keyHost;if(h){const n=new r(g),{signedTx:t}=n.sign(h);g=t}else if(k){const n=null==u?void 0:u.authToken,t=new r(g);try{const{signedTx:o}=await t.remoteSign(k,n);g=o}catch(n){throw console.log(n),new Error(`Remote signing to ${k} failed`)}}return await g.fee(w),await g.sign(),g},d=async(t,i,r,s,c,l,d,u,w=[])=>{const g=new o(d||p),h=new e;for(const n of i){const t=f(n,(new a).unlock(c));h.addInput(t)}for(const o of t){const t=f(o,(new n).unlock(r));h.addInput(t)}if(l.length!==i.length)throw new Error("Number of destinations must match number of ordinals being sent");for(const t of l){var k,m;let o;o=null!=(k=t.inscription)&&k.dataB64&&null!=(m=t.inscription)&&m.contentType?(new a).lock(t.address,t.inscription.dataB64,t.inscription.contentType,u):(new n).lock(t.address),h.addOutput({satoshis:1,lockingScript:o})}for(const t of w)h.addOutput({satoshis:t.amount,lockingScript:(new n).lock(t.to)});const O=(new n).lock(s);return h.addOutput({lockingScript:O,change:!0}),await h.fee(g),await h.sign(),h},u=async(t,i,r,s,c)=>{const a=new o(c||p),l=new e;for(const o of t){const t=f(o,(new n).unlock(i));l.addInput(t)}const d={satoshis:s,lockingScript:(new n).lock(r)};l.addOutput(d);const u=i.toAddress().toString(),w=(new n).lock(u);return l.addOutput({lockingScript:w,change:!0}),await l.fee(a),await l.sign(),l},p=10,f=(n,t)=>i(s({},n,{script:Buffer.from(n.script,"base64").toString("hex")}),t);export{l as createOrdinals,d as sendOrdinals,u as sendUtxos};
//# sourceMappingURL=index.modern.js.map
