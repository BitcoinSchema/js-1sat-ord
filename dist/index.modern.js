import{Script as t,Transaction as s,TxIn as n,P2PKHAddress as o,TxOut as e,SigHash as i}from"bsv-wasm-web";import{Buffer as _}from"buffer";import*as r from"dotenv";const g=t=>{for(var s=[],n=0,o=t.length;n<o;n++){var e=Number(t.charCodeAt(n)).toString(16);s.push(e)}return s.join("")};r.config();const c=(s,n,o,e)=>{const i=g("ord"),r=_.from(n,"base64").toString("hex"),c=g(o);let a=`${s.get_locking_script().to_asm_string()} OP_0 OP_IF ${i} OP_1 ${c} OP_0 ${r} OP_ENDIF`;if(e&&null!=e&&e.app&&null!=e&&e.type){a=`${a} OP_RETURN ${g("1PuQa7K62MiKCtssSLKy1kh56WWU7MtUR5")} ${g("SET")}`;for(const[t,s]of Object.entries(e))"cmd"!==t&&(a=`${a} ${g(t)} ${g(s)}`)}return t.from_asm_string(a)},a=async(r,g,a,u,p,m,l)=>{let f=new s(1,0),h=new n(_.from(r.txid,"hex"),r.vout,t.from_asm_string(""));f.add_input(h);const d=c(o.from_string(g),m.dataB64,m.contentType,l);let I=new e(BigInt(1),d);f.add_output(I);const x=o.from_string(u).get_locking_script();let w=new e(BigInt(1),x);const $=Math.ceil(p*(f.get_size()+w.to_bytes().byteLength)),y=r.satoshis-1-$;if(y<0)throw new Error("Inadequate satoshis for fee");if(y>0){let t=new e(BigInt(y),x);f.add_output(t)}const B=f.sign(a,i.ALL|i.FORKID,0,t.from_asm_string(r.script),BigInt(r.satoshis));return h.set_unlocking_script(t.from_asm_string(`${B.to_hex()} ${a.to_public_key().to_hex()}`)),f.set_input(0,h),f},u=async(r,g,a,u,p,m,l,f,h)=>{let d=new s(1,0),I=new n(_.from(g.txid,"hex"),g.vout,t.from_asm_string(""));d.add_input(I);let x,w=new n(_.from(r.txid,"hex"),r.vout,t.from_asm_string(""));d.add_input(w);const $=o.from_string(l);x=null!=f&&f.dataB64&&null!=f&&f.contentType?c($,f.dataB64,f.contentType,h):$.get_locking_script();let y=new e(BigInt(1),x);d.add_output(y);const B=o.from_string(u).get_locking_script();let b=new e(BigInt(1),B);const k=Math.ceil(p*(d.get_size()+b.to_bytes().byteLength));let O=new e(BigInt(r.satoshis-k),B);d.add_output(O);const v=d.sign(m,i.InputOutput,0,t.from_asm_string(g.script),BigInt(g.satoshis));I.set_unlocking_script(t.from_asm_string(`${v.to_hex()} ${m.to_public_key().to_hex()}`)),d.set_input(0,I);const P=d.sign(a,i.InputOutput,1,t.from_asm_string(r.script),BigInt(r.satoshis));return w.set_unlocking_script(t.from_asm_string(`${P.to_hex()} ${a.to_public_key().to_hex()}`)),d.set_input(1,w),d},p=async(o,r,g,c)=>{const a=new s(1,0);let u=0;for(let t of o||[])u+=t.satoshis;const p=u-c;console.log({feeSats:c,satsIn:u,satsOut:p}),a.add_output(new e(BigInt(p),g.get_locking_script()));let m=0;for(let s of o||[]){console.log({u:s});const o=new n(_.from(s.txid,"hex"),s.vout,t.from_asm_string(""));console.log({inx:o}),o.set_satoshis(BigInt(s.satoshis)),a.add_input(o);const e=a.sign(r,i.InputOutputs,m,t.from_asm_string(s.script),BigInt(s.satoshis));o.set_unlocking_script(t.from_asm_string(`${e.to_hex()} ${r.to_public_key().to_hex()}`)),a.set_input(m,o),m++}return a};export{c as buildInscription,a as createOrdinal,u as sendOrdinal,p as sendUtxos};
//# sourceMappingURL=index.modern.js.map
