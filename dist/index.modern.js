import{P2PKH as e,LockingScript as t,UnlockingScript as o,Transaction as n}from"@bsv/sdk";import r from"fs";import s from"path";import c from"os";import a from"crypto";const i="16.4.5",u=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/gm;function l(e){console.log(`[dotenv@${i}][DEBUG] ${e}`)}function p(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function f(e,t){let o;try{o=new URL(t)}catch(e){if("ERR_INVALID_URL"===e.code){const e=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw e.code="INVALID_DOTENV_KEY",e}throw e}const n=o.password;if(!n){const e=new Error("INVALID_DOTENV_KEY: Missing key part");throw e.code="INVALID_DOTENV_KEY",e}const r=o.searchParams.get("environment");if(!r){const e=new Error("INVALID_DOTENV_KEY: Missing environment part");throw e.code="INVALID_DOTENV_KEY",e}const s=`DOTENV_VAULT_${r.toUpperCase()}`,c=e.parsed[s];if(!c){const e=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${s} in your .env.vault file.`);throw e.code="NOT_FOUND_DOTENV_ENVIRONMENT",e}return{ciphertext:c,key:n}}function d(e){let t=null;if(e&&e.path&&e.path.length>0)if(Array.isArray(e.path))for(const o of e.path)r.existsSync(o)&&(t=o.endsWith(".vault")?o:`${o}.vault`);else t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`;else t=s.resolve(process.cwd(),".env.vault");return r.existsSync(t)?t:null}function h(e){return"~"===e[0]?s.join(c.homedir(),e.slice(1)):e}const g={configDotenv:function(e){const t=s.resolve(process.cwd(),".env");let o="utf8";const n=Boolean(e&&e.debug);e&&e.encoding?o=e.encoding:n&&l("No encoding is specified. UTF-8 is used by default");let c,a=[t];if(e&&e.path)if(Array.isArray(e.path)){a=[];for(const t of e.path)a.push(h(t))}else a=[h(e.path)];const i={};for(const t of a)try{const n=g.parse(r.readFileSync(t,{encoding:o}));g.populate(i,n,e)}catch(e){n&&l(`Failed to load ${t} ${e.message}`),c=e}let u=process.env;return e&&null!=e.processEnv&&(u=e.processEnv),g.populate(u,i,e),c?{parsed:i,error:c}:{parsed:i}},_configVault:function(e){console.log(`[dotenv@${i}][INFO] Loading env from encrypted .env.vault`);const t=g._parseVault(e);let o=process.env;return e&&null!=e.processEnv&&(o=e.processEnv),g.populate(o,t,e),{parsed:t}},_parseVault:function(e){const t=d(e),o=g.configDotenv({path:t});if(!o.parsed){const e=new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);throw e.code="MISSING_DATA",e}const n=p(e).split(","),r=n.length;let s;for(let e=0;e<r;e++)try{const t=f(o,n[e].trim());s=g.decrypt(t.ciphertext,t.key);break}catch(t){if(e+1>=r)throw t}return g.parse(s)},config:function(e){if(0===p(e).length)return g.configDotenv(e);const t=d(e);return t?g._configVault(e):(console.log(`[dotenv@${i}][WARN] You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`),g.configDotenv(e))},decrypt:function(e,t){const o=Buffer.from(t.slice(-64),"hex");let n=Buffer.from(e,"base64");const r=n.subarray(0,12),s=n.subarray(-16);n=n.subarray(12,-16);try{const e=a.createDecipheriv("aes-256-gcm",o,r);return e.setAuthTag(s),`${e.update(n)}${e.final()}`}catch(e){const t=e instanceof RangeError,o="Unsupported state or unable to authenticate data"===e.message;if(t||"Invalid key length"===e.message){const e=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw e.code="INVALID_DOTENV_KEY",e}if(o){const e=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw e.code="DECRYPTION_FAILED",e}throw e}},parse:function(e){const t={};let o,n=e.toString();for(n=n.replace(/\r\n?/gm,"\n");null!=(o=u.exec(n));){const e=o[1];let n=o[2]||"";n=n.trim();const r=n[0];n=n.replace(/^(['"`])([\s\S]*)\1$/gm,"$2"),'"'===r&&(n=n.replace(/\\n/g,"\n"),n=n.replace(/\\r/g,"\r")),t[e]=n}return t},populate:function(e,t,o={}){const n=Boolean(o&&o.debug),r=Boolean(o&&o.override);if("object"!=typeof t){const e=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw e.code="OBJECT_REQUIRED",e}for(const o of Object.keys(t))Object.prototype.hasOwnProperty.call(e,o)?(!0===r&&(e[o]=t[o]),n&&l(!0===r?`"${o}" is already defined and WAS overwritten`:`"${o}" is already defined and was NOT overwritten`)):e[o]=t[o]}};var E=g._configVault,v=g._parseVault,_=g.config,D=g.decrypt,N=g.parse,m=g.populate,w=g;w.configDotenv=g.configDotenv,w._configVault=E,w._parseVault=v,w.config=_,w.decrypt=D,w.parse=N,w.populate=m;const y=e=>{for(var t=[],o=0,n=e.length;o<n;o++){var r=Number(e.charCodeAt(o)).toString(16);t.push(r)}return t.join("")};_();const T=(o,n,r,s)=>{let c="";if(void 0!==n&&void 0!==r){const e=y("ord"),t=Buffer.from(n,"base64").toString("hex").trim();c=`OP_0 OP_IF ${e} OP_1 ${y(r)} OP_0 ${t?`${t} `:""}OP_ENDIF`}let a=`${(new e).lock(o).toASM()}${c?` ${c}`:""}`;if(null!=s&&s.app&&null!=s&&s.type){a=`${a} OP_RETURN ${y("1PuQa7K62MiKCtssSLKy1kh56WWU7MtUR5")} ${y("SET")}`;for(const[e,t]of Object.entries(s))"cmd"!==e&&(a=`${a} ${y(e)} ${y(t)}`)}return t.fromASM(a)},O=async(e,t,r,s)=>{const c={sourceTXID:e.txid,sourceOutputIndex:e.vout,unlockingScript:o.fromASM(e.script),sequence:0},a=T(t,null==r?void 0:r.dataB64,null==r?void 0:r.contentType,s);return new n(1,[c],[{satoshis:1,lockingScript:a}],0)},I=async(t,o,r,s,c,a,i,u,l=[])=>{const p=new e,f={sourceTXID:t.txid,sourceOutputIndex:t.vout,unlockingScriptTemplate:p.unlock(r),sequence:4294967295},d=T(o,a.dataB64,a.contentType,i),h=[];h.push({satoshis:1,lockingScript:d});for(const t of l)h.push({satoshis:t.amount,lockingScript:(new e).lock(t.to)});for(const e of h);const g=(new e).lock(s);h.push({lockingScript:g,change:!0});const E=new n(1,[f],h,0);return await E.fee(),E.getFee(),await E.sign(),E},V=async(t,r,s,c,a,i,u,l,p,f=[])=>{const d=[],h={sourceTXID:r.txid,sourceOutputIndex:r.vout,unlockingScript:o.fromASM(r.script),unlockingScriptTemplate:(new e).unlock(i),sequence:4294967295};d.push(h);const g={sourceTXID:t.txid,sourceOutputIndex:t.vout,unlockingScriptTemplate:(new e).unlock(s),sequence:4294967295};let E;d.push(g),E=null!=l&&l.dataB64&&null!=l&&l.contentType?T(u,l.dataB64,l.contentType,p):(new e).lock(u);const v=[];v.push({satoshis:1,lockingScript:E});for(const t of f)v.push({satoshis:t.amount,lockingScript:(new e).lock(t.to)});const _=(new e).lock(c);v.push({satoshis:t.satoshis-1,lockingScript:_,change:!0});const D=new n(1,d,v,0);return await D.fee(),await D.sign(),D},k=async(e,t,o,r)=>new n(1,[],[],0),$=107,S=148,A=34;export{S as P2PKH_FULL_INPUT_SIZE,$ as P2PKH_INPUT_SCRIPT_SIZE,A as P2PKH_OUTPUT_SIZE,T as buildInscription,O as buildReinscriptionTemplate,I as createOrdinal,V as sendOrdinal,k as sendUtxos};
//# sourceMappingURL=index.modern.js.map
