import{P2PKH as t,LockingScript as e,Script as o,Utils as n,fromUtxo as s,SatoshisPerKilobyte as i,Transaction as r,OP as a,BigNumber as c,UnlockingScript as u,TransactionSignature as f}from"@bsv/sdk";import{Sigma as d}from"sigma-protocol";const l=t=>Buffer.from(t).toString("hex"),p=10,h="https://ordinals.gorillapool.io/api";class g extends t{lock(o,n,s){let i="";if(void 0!==(null==n?void 0:n.dataB64)&&void 0!==(null==n?void 0:n.contentType)){const t=l("ord"),e=Buffer.from(n.dataB64,"base64").toString("hex").trim();if(!e)throw new Error("Invalid file data");const o=l(n.contentType);if(!o)throw new Error("Invalid media type");i=`OP_0 OP_IF ${t} OP_1 ${o} OP_0 ${e} OP_ENDIF`}let r=`${i?`${i} `:""}${(new t).lock(o).toASM()}`;if(s&&(!s.app||!s.type))throw new Error("MAP.app and MAP.type are required fields");if(null!=s&&s.app&&null!=s&&s.type){r=`${r} OP_RETURN ${l("1PuQa7K62MiKCtssSLKy1kh56WWU7MtUR5")} ${l("SET")}`;for(const[t,e]of Object.entries(s))"cmd"!==t&&(r=`${r} ${l(t)} ${l(e)}`)}return e.fromASM(r)}}function w(){return w=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var o=arguments[e];for(var n in o)({}).hasOwnProperty.call(o,n)&&(t[n]=o[n])}return t},w.apply(null,arguments)}var m,y;!function(t){t.BSV20="bsv20",t.BSV21="bsv21"}(m||(m={})),function(t){t.Paymail="paymail",t.Address="address",t.Script="script"}(y||(y={}));const{fromBase58Check:b}=n,k=(t,e)=>s(w({},t,{script:Buffer.from(t.script,"base64").toString("hex")}),e),x=async(e,o="base64")=>{const n=`${h}/txos/address/${e}/unspent?bsv20=false`;console.log({payUrl:n});const s=await fetch(n);if(!s.ok)throw new Error("Error fetching pay utxos");let i=await s.json();i=i.filter(t=>1!==t.satoshis);const r=b(e),a=(new t).lock(r.data);return i=i.map(t=>({txid:t.txid,vout:t.vout,satoshis:t.satoshis,script:"hex"===o||"base64"===o?Buffer.from(a.toBinary()).toString(o):a.toASM()})),i},S=async(t,e,n=10,s=0,i="base64")=>{let r=`${h}/txos/address/${t}/unspent?limit=${n}&offset=${s}&`;e&&(r+=`q=${Buffer.from(JSON.stringify({map:{subTypeData:{collectionId:e}}})).toString("base64")}`);const a=await fetch(r);if(!a.ok)throw new Error(`Error fetching NFT utxos for ${t}`);let c=await a.json();c=c.filter(t=>{var e;return 1===t.satoshis&&!(null!=(e=t.data)&&e.list)});const u=c.map(t=>`${t.txid}_${t.vout}`),f=await fetch(`${h}/txos/outpoints?script=true`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify([...u])});if(!f.ok)throw new Error(`Error fetching NFT scripts for ${t}`);return c=(await f.json()||[]).map(t=>{let n=t.script;"hex"===i?n=Buffer.from(n,"base64").toString("hex"):"asm"===i&&(n=o.fromHex(Buffer.from(n,"base64").toString("hex")).toASM());const s={origin:t.origin.outpoint,script:n,vout:t.vout,txid:t.txid,satoshis:1};return e&&(s.collectionId=e),s}),c},I=async(t,e,o)=>{const n=`${h}/bsv20/${o}/${t===m.BSV20?"tick":"id"}/${e}?bsv20=true&listing=false`,s=await fetch(n);if(!s.ok)throw new Error(`Error fetching ${t} utxos`);let i=await s.json();return i=i.map(t=>({amt:t.amt,script:t.script,vout:t.vout,txid:t.txid,id:e,satoshis:1})),i},B=async(t,e)=>{const o=null==e?void 0:e.idKey,n=null==e?void 0:e.keyHost;if(o){const e=new d(t),{signedTx:n}=e.sign(o);return n}if(n){const o=null==e?void 0:e.authToken,s=new d(t);try{const{signedTx:t}=await s.remoteSign(n,o);return t}catch(t){throw console.log(t),new Error(`Remote signing to ${n} failed`)}}throw new Error("Signer must be a LocalSigner or RemoteSigner")},v=t=>{if(!t)return;const e={app:t.app,type:t.type};for(const[o,n]of Object.entries(t))void 0!==n&&(e[o]="string"==typeof n?n:Array.isArray(n)||"object"==typeof n?JSON.stringify(n):String(n));return e},O=async e=>{const{utxos:s,destinations:a,paymentPk:c,changeAddress:u,satsPerKb:f=p,metaData:d,signer:l,additionalPayments:h=[]}=e,w=new i(f);let m=new r;for(const e of s){const s=k(e,(new t).unlock(c,"all",!0,e.satoshis,o.fromBinary(n.toArray(e.script,"base64"))));m.addInput(s)}a.length>100&&console.warn("Creating many inscriptions at once can be slow. Consider using multiple transactions instead.");for(const t of a){if(!t.inscription)throw new Error("Inscription is required for all destinations");if(d)for(const t of Object.keys(d))void 0===d[t]&&delete d[t];m.addOutput({satoshis:1,lockingScript:(new g).lock(t.address,t.inscription,v(d))})}for(const e of h)m.addOutput({satoshis:e.amount,lockingScript:(new t).lock(e.to)});const y=s.reduce((t,e)=>t+BigInt(e.satoshis),0n),b=m.outputs.reduce((t,e)=>t+BigInt(e.satoshis||0),0n),x=await w.computeFee(m);let S;if(y>b+BigInt(x)){const e=(new t).lock(u||c.toAddress().toString()),o={lockingScript:e,change:!0};S={txid:"",vout:m.outputs.length,satoshis:0,script:Buffer.from(e.toHex(),"hex").toString("base64")},m.addOutput(o)}return l&&(m=await B(m,l)),await m.fee(w),await m.sign(),S&&(S.satoshis=m.outputs[m.outputs.length-1].satoshis,S.txid=m.id("hex")),{tx:m,spentOutpoints:s.map(t=>`${t.txid}_${t.vout}`),payChange:S}},$=async e=>{e.satsPerKb||(e.satsPerKb=p),e.additionalPayments||(e.additionalPayments=[]),void 0===e.enforceUniformSend&&(e.enforceUniformSend=!0);const s=new i(e.satsPerKb);let a=new r;const c=[];for(const t of e.ordinals){if(1!==t.satoshis)throw new Error("1Sat Ordinal utxos must have exactly 1 satoshi");const s=k(t,(new g).unlock(e.ordPk,"all",!0,t.satoshis,o.fromBinary(n.toArray(t.script,"base64"))));c.push(`${t.txid}_${t.vout}`),a.addInput(s)}if(e.enforceUniformSend&&e.destinations.length!==e.ordinals.length)throw new Error("Number of destinations must match number of ordinals being sent");for(const o of e.destinations){var u,f;let n;n=null!=(u=o.inscription)&&u.dataB64&&null!=(f=o.inscription)&&f.contentType?(new g).lock(o.address,o.inscription,v(e.metaData)):(new t).lock(o.address),a.addOutput({satoshis:1,lockingScript:n})}for(const o of e.additionalPayments)a.addOutput({satoshis:o.amount,lockingScript:(new t).lock(o.to)});let d=0n;const l=a.outputs.reduce((t,e)=>t+BigInt(e.satoshis||0),0n);let h,w=0;for(const i of e.paymentUtxos){const r=k(i,(new t).unlock(e.paymentPk,"all",!0,i.satoshis,o.fromBinary(n.toArray(i.script,"base64"))));if(c.push(`${i.txid}_${i.vout}`),a.addInput(r),d+=BigInt(i.satoshis),w=await s.computeFee(a),d>=l+BigInt(w))break}if(d<l)throw new Error("Not enough ordinals to send");if(d>l+BigInt(w)){const o=(new t).lock(e.changeAddress||e.paymentPk.toAddress().toString()),n={lockingScript:o,change:!0};h={txid:"",vout:a.outputs.length,satoshis:0,script:Buffer.from(o.toHex(),"hex").toString("base64")},a.addOutput(n)}return e.signer&&(a=await B(a,e.signer)),await a.fee(s),await a.sign(),h&&(h.satoshis=a.outputs[a.outputs.length-1].satoshis,h.txid=a.id("hex")),{tx:a,spentOutpoints:c,payChange:h}},A=async e=>{const{utxos:s,paymentPk:a,payments:c,satsPerKb:u=p,changeAddress:f=a.toAddress().toString()}=e,d=new i(u),l=new r;for(const e of c){const o={satoshis:e.amount,lockingScript:(new t).lock(e.to)};l.addOutput(o)}let h=0n;const g=l.outputs.reduce((t,e)=>t+(e.satoshis||0),0);let w,m=0;for(const e of s){const s=k(e,(new t).unlock(a,"all",!0,e.satoshis,o.fromBinary(n.toArray(e.script,"base64"))));if(l.addInput(s),h+=BigInt(e.satoshis),m=await d.computeFee(l),h>=g+m)break}if(h<g+m)throw new Error(`Not enough funds to send. Total sats in: ${h}, Total sats out: ${g}, Fee: ${m}`);if(h>g+m){const e=(new t).lock(f),o={lockingScript:e,change:!0};w={txid:"",vout:l.outputs.length,satoshis:0,script:Buffer.from(e.toHex(),"hex").toString("base64")},l.addOutput(o)}else h<g+m&&console.log("No change needed");return await l.fee(d),await l.sign(),w&&(w.satoshis=l.outputs[l.outputs.length-1].satoshis,w.txid=l.id("hex")),{tx:l,spentOutpoints:s.map(t=>`${t.txid}_${t.vout}`),payChange:w}},E=async e=>{const{protocol:s,tokenID:a,utxos:c,inputTokens:u,distributions:f,paymentPk:d,ordPk:l,changeAddress:h,tokenChangeAddress:y,satsPerKb:b=p,additionalPayments:x=[],burn:S=!1}=e;let I=0n,B=0n,v=0n;if(!u.every(t=>t.id===a))throw new Error("Input tokens do not match the provided tokenID");const O=new i(b),$=new r;for(const t of u){const e=n.toArray(t.script,"base64"),s=o.fromBinary(e);$.addInput({unlockingScriptTemplate:(new g).unlock(l,"all",!0,t.satoshis,s),sourceTXID:t.txid,sourceOutputIndex:t.vout,sequence:4294967295}),B+=BigInt(t.amt)}for(const t of f){const e={p:"bsv-20",op:S?"burn":"transfer",amt:t.amt};let o;if(s===m.BSV20)o=w({},e,{tick:a});else{if(s!==m.BSV21)throw new Error("Invalid protocol");o=w({},e,{id:a})}$.addOutput({satoshis:1,lockingScript:(new g).lock(t.address,{dataB64:Buffer.from(JSON.stringify(o)).toString("base64"),contentType:"application/bsv20"})}),v+=BigInt(t.amt)}let A,E;if(I=B-v,I<0n)throw new Error("Not enough tokens to send");if(I>0n){const t={p:"bsv-20",op:"transfer",amt:I.toString()};let e;if(s===m.BSV20)e=w({},t,{tick:a});else{if(s!==m.BSV21)throw new Error("Invalid protocol");e=w({},t,{id:a})}const o=(new g).lock(y||l.toAddress().toString(),{dataB64:JSON.stringify(e),contentType:"application/bsv-20"}),n=$.outputs.length;$.addOutput({lockingScript:o,satoshis:1}),A={id:a,satoshis:1,script:Buffer.from(o.toBinary()).toString("base64"),txid:"",vout:n,amt:I.toString()}}for(const e of x)$.addOutput({satoshis:e.amount,lockingScript:(new t).lock(e.to)});const T=h||d.toAddress().toString(),P=(new t).lock(T);$.addOutput({lockingScript:P,change:!0});let C=0n;const N=$.outputs.reduce((t,e)=>t+BigInt(e.satoshis||0),0n);let _=0;for(const e of c){const s=k(e,(new t).unlock(d,"all",!0,e.satoshis,o.fromBinary(n.toArray(e.script,"base64"))));if($.addInput(s),C+=BigInt(e.satoshis),_=await O.computeFee($),C>=N+BigInt(_))break}if(C<N+BigInt(_))throw new Error(`Not enough funds to purchase listing. Total sats in: ${C}, Total sats out: ${N}, Fee: ${_}`);await $.fee(O),await $.sign();const j=$.id("hex");A&&(A.txid=j);const D=$.outputs.findIndex(t=>t.change);if(-1!==D){const t=$.outputs[D];E={satoshis:t.satoshis,txid:j,vout:D,script:Buffer.from(t.lockingScript.toBinary()).toString("base64")}}return E&&(E.satoshis=$.outputs[$.outputs.length-1].satoshis,E.txid=$.id("hex")),{tx:$,spentOutpoints:$.inputs.map(t=>`${t.sourceTXID}_${t.sourceOutputIndex}`),payChange:E,tokenChange:A}},T=(t,e)=>{try{if("collection"===t){const t=e;if(!t.description)return new Error("Collection description is required");if(!t.quantity)return new Error("Collection quantity is required");if(t.rarityLabels){if(!Array.isArray(t.rarityLabels))return new Error("Rarity labels must be an array");if(!t.rarityLabels.every(t=>Object.values(t).every(t=>"string"==typeof t)))return new Error(`Invalid rarity labels ${t.rarityLabels}`)}if(t.traits){if("object"!=typeof t.traits)return new Error("Collection traits must be an object");if(t.traits&&!Object.keys(t.traits).every(e=>"string"==typeof e&&"object"==typeof t.traits[e]))return new Error("Collection traits must be a valid CollectionTraits object")}}if("collectionItem"===t){const t=e;if(!t.collectionId)return new Error("Collection id is required");if(!t.collectionId.includes("_"))return new Error("Collection id must be a valid outpoint");if(64!==t.collectionId.split("_")[0].length)return new Error("Collection id must contain a valid txid");if(Number.isNaN(Number.parseInt(t.collectionId.split("_")[1])))return new Error("Collection id must contain a valid vout");if(t.mintNumber&&"number"!=typeof t.mintNumber)return new Error("Mint number must be a number");if(t.rank&&"number"!=typeof t.rank)return new Error("Rank must be a number");if(t.rarityLabel&&"string"!=typeof t.rarityLabel)return new Error("Rarity label must be a string");if(t.traits&&"object"!=typeof t.traits)return new Error("Traits must be an object");if(t.attachments&&!Array.isArray(t.attachments))return new Error("Attachments must be an array")}return}catch(t){return new Error("Invalid JSON data")}};class P{lock(e,s,i,r){const a=n.fromBase58Check(e).data,c=n.fromBase58Check(s).data;let u=new o;if(void 0!==(null==r?void 0:r.dataB64)&&void 0!==(null==r?void 0:r.contentType)){const t=l("ord"),e=Buffer.from(r.dataB64,"base64").toString("hex").trim();if(!e)throw new Error("Invalid file data");const n=l(r.contentType);if(!n)throw new Error("Invalid media type");u=o.fromASM(`OP_0 OP_IF ${t} OP_1 ${n} OP_0 ${e} OP_ENDIF`)}return u.writeScript(o.fromHex("2097dfd76851bf465e8f715593b217714858bbe9570ff3bd5e33840a34e20ff0262102ba79df5f8ae7604a9830f03c7933028186aede0675a16f025dc4f8be8eec0382201008ce7480da41702918d1ec8e6849ba32b4d65b1e40dc669c31a1e6306b266c0000")).writeBin(a).writeBin(P.buildOutput(i,(new t).lock(c).toBinary())).writeScript(o.fromHex("615179547a75537a537a537a0079537a75527a527a7575615579008763567901c161517957795779210ac407f0e4bd44bfc207355a778b046225a7068fc59ee7eda43ad905aadbffc800206c266b30e6a1319c66dc401e5bd6b432ba49688eecd118297041da8074ce081059795679615679aa0079610079517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01007e81517a75615779567956795679567961537956795479577995939521414136d08c5ed2bf3ba048afe6dcaebafeffffffffffffffffffffffffffffff00517951796151795179970079009f63007952799367007968517a75517a75517a7561527a75517a517951795296a0630079527994527a75517a6853798277527982775379012080517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01205279947f7754537993527993013051797e527e54797e58797e527e53797e52797e57797e0079517a75517a75517a75517a75517a75517a75517a75517a75517a75517a75517a75517a75517a756100795779ac517a75517a75517a75517a75517a75517a75517a75517a75517a7561517a75517a756169587951797e58797eaa577961007982775179517958947f7551790128947f77517a75517a75618777777777777777777767557951876351795779a9876957795779ac777777777777777767006868"))}cancelListing(e,o="all",n=!1,s,i){const r=(new t).unlock(e,o,n,s,i);return{sign:async function(t,e){return(await r.sign(t,e)).writeOpCode(a.OP_1)},estimateLength:async function(){return 107}}}purchaseListing(t,e){const o={sign:async function(o,s){var i;if(o.outputs.length<2)throw new Error("Malformed transaction");const r=(new u).writeBin(P.buildOutput(o.outputs[0].satoshis||0,o.outputs[0].lockingScript.toBinary()));if(o.outputs.length>2){const t=new n.Writer;for(const e of o.outputs.slice(2))t.write(P.buildOutput(e.satoshis||0,e.lockingScript.toBinary()));r.writeBin(t.toArray())}else r.writeOpCode(a.OP_0);const c=o.inputs[s];let d;if(!t&&c.sourceTransaction)d=c.sourceTransaction.outputs[c.sourceOutputIndex].satoshis;else if(!t)throw new Error("sourceTransaction or sourceSatoshis is required");d=t;const l=c.sourceTXID||(null==(i=c.sourceTransaction)?void 0:i.id("hex"));let p=e;var h;e||(p=null==(h=c.sourceTransaction)?void 0:h.outputs[c.sourceOutputIndex].lockingScript);const g=f.format({sourceTXID:l,sourceOutputIndex:c.sourceOutputIndex,sourceSatoshis:d,transactionVersion:o.version,otherInputs:[],inputIndex:s,outputs:o.outputs,inputSequence:c.sequence,subscript:p,lockTime:o.lockTime,scope:f.SIGHASH_ALL|f.SIGHASH_ANYONECANPAY|f.SIGHASH_FORKID});return r.writeBin(g).writeOpCode(a.OP_0)},estimateLength:async function(t,e){return(await o.sign(t,e)).toBinary().length}};return o}static buildOutput(t,e){const o=new n.Writer;return o.writeUInt64LEBn(new c(t)),o.writeVarIntNum(e.length),o.write(e),o.toArray()}}const{toArray:C}=n,N=async e=>{const{utxos:s,listings:a,paymentPk:c,ordPk:u,changeAddress:f,satsPerKb:d=p,additionalPayments:l=[]}=e,h=new i(d),w=new r;a.length>100&&console.warn("Creating many inscriptions at once can be slow. Consider using multiple transactions instead.");for(const t of a){w.addOutput({satoshis:1,lockingScript:(new P).lock(t.payAddress,t.ordAddress,t.price)});const e=C(t.listingUtxo.script,"base64"),n=o.fromBinary(e);w.addInput({unlockingScriptTemplate:(new g).unlock(u,"all",!0,t.listingUtxo.satoshis,n),sourceTXID:t.listingUtxo.txid,sourceOutputIndex:t.listingUtxo.vout,sequence:4294967295})}for(const e of l)w.addOutput({satoshis:e.amount,lockingScript:(new t).lock(e.to)});let m;const y=(new t).lock(f||c.toAddress().toString());w.addOutput({lockingScript:y,change:!0});let b=0n;const x=w.outputs.reduce((t,e)=>t+BigInt(e.satoshis||0),0n);let S=0;for(const e of s){const s=k(e,(new t).unlock(c,"all",!0,e.satoshis,o.fromBinary(n.toArray(e.script,"base64"))));if(w.addInput(s),b+=BigInt(e.satoshis),S=await h.computeFee(w),b>=x+BigInt(S))break}if(b<x+BigInt(S))throw new Error(`Not enough funds to purchase listing. Total sats in: ${b}, Total sats out: ${x}, Fee: ${S}`);await w.fee(h),await w.sign();const I=w.outputs.findIndex(t=>t.change);if(-1!==I){const t=w.outputs[I];m={satoshis:t.satoshis,txid:w.id("hex"),vout:I,script:Buffer.from(t.lockingScript.toBinary()).toString("base64")}}return m&&(m.satoshis=w.outputs[w.outputs.length-1].satoshis,m.txid=w.id("hex")),{tx:w,spentOutpoints:w.inputs.map(t=>`${t.sourceTXID}_${t.sourceOutputIndex}`),payChange:m}},_=async e=>{const{utxos:s,listingUtxos:a,ordPk:c,paymentPk:u,changeAddress:f,additionalPayments:d,satsPerKb:l=p}=e;a.length>100&&console.warn("Creating many inscriptions at once can be slow. Consider using multiple transactions instead.");const h=new i(l),g=new r;for(const e of a)g.addInput({sourceTXID:e.txid,unlockingScriptTemplate:(new P).cancelListing(c,"all",!0,e.satoshis,o.fromBinary(n.toArray(e.script,"base64"))),sourceOutputIndex:e.vout,sequence:4294967295}),g.addOutput({satoshis:1,lockingScript:(new t).lock(c.toAddress().toString())});for(const e of d)g.addOutput({satoshis:e.amount,lockingScript:(new t).lock(e.to)});let w;const m=f||u.toAddress().toString(),y=(new t).lock(m);g.addOutput({lockingScript:y,change:!0});let b=0n;const x=g.outputs.reduce((t,e)=>t+BigInt(e.satoshis||0),0n);let S=0;for(const e of s){const s=k(e,(new t).unlock(u,"all",!0,e.satoshis,o.fromBinary(n.toArray(e.script,"base64"))));if(g.addInput(s),b+=BigInt(e.satoshis),S=await h.computeFee(g),b>=x+BigInt(S))break}if(b<x+BigInt(S))throw new Error(`Not enough funds to purchase listing. Total sats in: ${b}, Total sats out: ${x}, Fee: ${S}`);await g.fee(h),await g.sign();const I=g.outputs.findIndex(t=>t.change);if(-1!==I){const t=g.outputs[I];w={satoshis:t.satoshis,txid:g.id("hex"),vout:I,script:Buffer.from(t.lockingScript.toBinary()).toString("base64")}}return w&&(w.satoshis=g.outputs[g.outputs.length-1].satoshis,w.txid=g.id("hex")),{tx:g,spentOutpoints:g.inputs.map(t=>`${t.sourceTXID}_${t.sourceOutputIndex}`),payChange:w}},j=async e=>{const{protocol:s,tokenID:a,utxos:c,paymentPk:u,listing:f,ordAddress:d,changeAddress:l,additionalPayments:h=[],satsPerKb:y=p}=e,b=new i(y),x=new r;x.addInput({unlockingScriptTemplate:(new P).purchaseListing(f.listingUtxo.satoshis,o.fromHex(Buffer.from(f.listingUtxo.script,"base64").toString("hex"))),sourceTXID:f.listingUtxo.txid,sourceOutputIndex:f.listingUtxo.vout,sequence:4294967295});const S={p:"bsv-20",op:"transfer",amt:f.listingUtxo.amt};let I,B;if(s===m.BSV20)I=w({},S,{tick:a});else{if(s!==m.BSV21)throw new Error("Invalid protocol");I=w({},S,{id:a})}x.addOutput({satoshis:1,lockingScript:(new g).lock(d,{dataB64:JSON.stringify(I),contentType:"application/bsv-20"})});for(const e of h)x.addOutput({satoshis:e.amount,lockingScript:(new t).lock(e.to)});const v=l||u.toAddress().toString(),O=(new t).lock(v);x.addOutput({lockingScript:O,change:!0});let $=0n;const A=x.outputs.reduce((t,e)=>t+BigInt(e.satoshis||0),0n);let E=0;for(const e of c){const s=k(e,(new t).unlock(u,"all",!0,e.satoshis,o.fromBinary(n.toArray(e.script,"base64"))));if(x.addInput(s),$+=BigInt(e.satoshis),E=await b.computeFee(x),$>=A+BigInt(E))break}if($<A+BigInt(E))throw new Error(`Not enough funds to purchase listing. Total sats in: ${$}, Total sats out: ${A}, Fee: ${E}`);await x.fee(b),await x.sign();const T=x.outputs.findIndex(t=>t.change);if(-1!==T){const t=x.outputs[T];B={satoshis:t.satoshis,txid:x.id("hex"),vout:T,script:Buffer.from(t.lockingScript.toBinary()).toString("base64")}}return B&&(B.satoshis=x.outputs[x.outputs.length-1].satoshis,B.txid=x.id("hex")),{tx:x,spentOutpoints:x.inputs.map(t=>`${t.sourceTXID}_${t.sourceOutputIndex}`),payChange:B}};export{P as OrdLock,g as OrdP2PKH,y as RoytaltyType,m as TokenType,_ as cancelOrdListings,N as createOrdListings,O as createOrdinals,S as fetchNftUtxos,x as fetchPayUtxos,I as fetchTokenUtxos,j as purchaseOrdListings,$ as sendOrdinals,A as sendUtxos,v as stringifyMetaData,E as transferOrdTokens,T as validateSubTypeData};
//# sourceMappingURL=index.modern.js.map
