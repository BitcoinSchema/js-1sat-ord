import{Script as t,Transaction as n,TxIn as o,P2PKHAddress as e,TxOut as s,SigHash as r}from"bsv-wasm";import{Buffer as i}from"buffer";import c from"fs";import a from"path";import _ from"os";import{Sigma as l}from"sigma-protocol";const g=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/gm;function u(t){console.log(`[dotenv@16.0.3][DEBUG] ${t}`)}const p={config:function(t){let n=a.resolve(process.cwd(),".env"),o="utf8";const e=Boolean(t&&t.debug),s=Boolean(t&&t.override);var r;t&&(null!=t.path&&(n="~"===(r=t.path)[0]?a.join(_.homedir(),r.slice(1)):r),null!=t.encoding&&(o=t.encoding));try{const t=p.parse(c.readFileSync(n,{encoding:o}));return Object.keys(t).forEach(function(n){Object.prototype.hasOwnProperty.call(process.env,n)?(!0===s&&(process.env[n]=t[n]),e&&u(!0===s?`"${n}" is already defined in \`process.env\` and WAS overwritten`:`"${n}" is already defined in \`process.env\` and was NOT overwritten`)):process.env[n]=t[n]}),{parsed:t}}catch(t){return e&&u(`Failed to load ${n} ${t.message}`),{error:t}}},parse:function(t){const n={};let o,e=t.toString();for(e=e.replace(/\r\n?/gm,"\n");null!=(o=g.exec(e));){const t=o[1];let e=o[2]||"";e=e.trim();const s=e[0];e=e.replace(/^(['"`])([\s\S]*)\1$/gm,"$2"),'"'===s&&(e=e.replace(/\\n/g,"\n"),e=e.replace(/\\r/g,"\r")),n[t]=e}return n}};var d=p.config,m=p.parse,f=p;f.config=d,f.parse=m;const h=t=>{for(var n=[],o=0,e=t.length;o<e;o++){var s=Number(t.charCodeAt(o)).toString(16);n.push(s)}return n.join("")};d();const w=(n,o,e,s)=>{let r="";if(void 0!==o&&void 0!==e){const t=h("ord"),n=i.from(o,"base64").toString("hex");r=`OP_0 OP_IF ${t} OP_1 ${h(e)} OP_0 ${n} OP_ENDIF`}let c=`${n.get_locking_script().to_asm_string()}${r?" "+r:""}`;if(s&&null!=s&&s.app&&null!=s&&s.type){c=`${c} OP_RETURN ${h("1PuQa7K62MiKCtssSLKy1kh56WWU7MtUR5")} ${h("SET")}`;for(const[t,n]of Object.entries(s))"cmd"!==t&&(c=`${c} ${h(t)} ${h(n)}`)}return t.from_asm_string(c)},v=async(r,c,a,_)=>{let l=new n(1,0),g=new o(i.from(r.txid,"hex"),r.vout,t.from_asm_string(r.script));l.add_input(g);const u=w(e.from_string(c),null==a?void 0:a.dataB64,null==a?void 0:a.contentType,_);let p=new s(BigInt(1),u);return l.add_output(p),l},y=async(c,a,_,g,u,p,d,m)=>{let f=new n(1,0),h=new o(i.from(c.txid,"hex"),c.vout,t.from_asm_string(""));f.add_input(h);const v=w(e.from_string(a),p.dataB64,p.contentType,d);let y=new s(BigInt(1),v);f.add_output(y);const $=e.from_string(g).get_locking_script();let x=new s(BigInt(1),$);const I=Math.ceil(u*(f.get_size()+x.to_bytes().byteLength)),B=c.satoshis-1-I;if(B<0)throw new Error("Inadequate satoshis for fee");if(B>0){let t=new s(BigInt(B),$);f.add_output(t)}const k=null==m?void 0:m.idKey,b=null==m?void 0:m.keyHost;if(k){const t=new l(f),{signedTx:n}=t.sign(k);f=n}else if(b){const t=null==m?void 0:m.authToken,n=new l(f);try{const{signedTx:o}=await n.remoteSign(b,t);f=o}catch(t){throw console.log(t),new Error("Remote signing to "+b+" failed")}}const O=f.sign(_,r.ALL|r.FORKID,0,t.from_asm_string(c.script),BigInt(c.satoshis));return h.set_unlocking_script(t.from_asm_string(`${O.to_hex()} ${_.to_public_key().to_hex()}`)),f.set_input(0,h),f},$=async(c,a,_,l,g,u,p,d,m)=>{let f=new n(1,0),h=new o(i.from(a.txid,"hex"),a.vout,t.from_asm_string(""));f.add_input(h);let v,y=new o(i.from(c.txid,"hex"),c.vout,t.from_asm_string(""));f.add_input(y);const $=e.from_string(p);v=null!=d&&d.dataB64&&null!=d&&d.contentType?w($,d.dataB64,d.contentType,m):$.get_locking_script();let x=new s(BigInt(1),v);f.add_output(x);const I=e.from_string(l).get_locking_script();let B=new s(BigInt(1),I);const k=Math.ceil(g*(f.get_size()+B.to_bytes().byteLength));let b=new s(BigInt(c.satoshis-k),I);f.add_output(b);const O=f.sign(u,r.InputOutput,0,t.from_asm_string(a.script),BigInt(a.satoshis));h.set_unlocking_script(t.from_asm_string(`${O.to_hex()} ${u.to_public_key().to_hex()}`)),f.set_input(0,h);const S=f.sign(_,r.InputOutput,1,t.from_asm_string(c.script),BigInt(c.satoshis));return y.set_unlocking_script(t.from_asm_string(`${S.to_hex()} ${_.to_public_key().to_hex()}`)),f.set_input(1,y),f},x=async(e,c,a,_)=>{const l=new n(1,0);let g=0;for(let t of e||[])g+=t.satoshis;const u=g-_;console.log({feeSats:_,satsIn:g,satsOut:u}),l.add_output(new s(BigInt(u),a.get_locking_script()));let p=0;for(let n of e||[]){console.log({u:n});const e=new o(i.from(n.txid,"hex"),n.vout,t.from_asm_string(""));console.log({inx:e}),e.set_satoshis(BigInt(n.satoshis)),l.add_input(e);const s=l.sign(c,r.InputOutputs,p,t.from_asm_string(n.script),BigInt(n.satoshis));e.set_unlocking_script(t.from_asm_string(`${s.to_hex()} ${c.to_public_key().to_hex()}`)),l.set_input(p,e),p++}return l};export{w as buildInscription,v as buildReinscriptionTemplate,y as createOrdinal,$ as sendOrdinal,x as sendUtxos};
//# sourceMappingURL=index.modern.js.map
