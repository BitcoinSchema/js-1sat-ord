import{Script as t,Transaction as o,TxIn as n,P2PKHAddress as e,TxOut as s,SigHash as r}from"bsv-wasm";import{Buffer as i}from"buffer";import c from"fs";import a from"path";import _ from"os";import{Sigma as l}from"sigma-protocol";const g=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/gm;function u(t){console.log(`[dotenv@16.0.3][DEBUG] ${t}`)}const p={config:function(t){let o=a.resolve(process.cwd(),".env"),n="utf8";const e=Boolean(t&&t.debug),s=Boolean(t&&t.override);var r;t&&(null!=t.path&&(o="~"===(r=t.path)[0]?a.join(_.homedir(),r.slice(1)):r),null!=t.encoding&&(n=t.encoding));try{const t=p.parse(c.readFileSync(o,{encoding:n}));return Object.keys(t).forEach(function(o){Object.prototype.hasOwnProperty.call(process.env,o)?(!0===s&&(process.env[o]=t[o]),e&&u(!0===s?`"${o}" is already defined in \`process.env\` and WAS overwritten`:`"${o}" is already defined in \`process.env\` and was NOT overwritten`)):process.env[o]=t[o]}),{parsed:t}}catch(t){return e&&u(`Failed to load ${o} ${t.message}`),{error:t}}},parse:function(t){const o={};let n,e=t.toString();for(e=e.replace(/\r\n?/gm,"\n");null!=(n=g.exec(e));){const t=n[1];let e=n[2]||"";e=e.trim();const s=e[0];e=e.replace(/^(['"`])([\s\S]*)\1$/gm,"$2"),'"'===s&&(e=e.replace(/\\n/g,"\n"),e=e.replace(/\\r/g,"\r")),o[t]=e}return o}};var f=p.config,d=p.parse,m=p;m.config=f,m.parse=d;const h=t=>{for(var o=[],n=0,e=t.length;n<e;n++){var s=Number(t.charCodeAt(n)).toString(16);o.push(s)}return o.join("")};f();const v=(o,n,e,s)=>{let r="";if(void 0!==n&&void 0!==e){const t=h("ord"),o=i.from(n,"base64").toString("hex");r=`OP_0 OP_IF ${t} OP_1 ${h(e)} OP_0 ${o} OP_ENDIF`}let c=`${o.get_locking_script().to_asm_string()}${r?" "+r:""}`;if(s&&null!=s&&s.app&&null!=s&&s.type){c=`${c} OP_RETURN ${h("1PuQa7K62MiKCtssSLKy1kh56WWU7MtUR5")} ${h("SET")}`;for(const[t,o]of Object.entries(s))"cmd"!==t&&(c=`${c} ${h(t)} ${h(o)}`)}return t.from_asm_string(c)},w=async(r,c,a,_)=>{let l=new o(1,0),g=new n(i.from(r.txid,"hex"),r.vout,t.from_asm_string(r.script));l.add_input(g);const u=v(e.from_string(c),null==a?void 0:a.dataB64,null==a?void 0:a.contentType,_);let p=new s(BigInt(1),u);return l.add_output(p),l},y=async(c,a,_,g,u,p,f,d,m=[])=>{let h=new o(1,0),w=new n(i.from(c.txid,"hex"),c.vout,t.from_asm_string(""));h.add_input(w);const y=v(e.from_string(a),p.dataB64,p.contentType,f);let $=new s(BigInt(1),y);h.add_output($);for(let t of m){let o=new s(t.amount,e.from_string(t.to).get_locking_script());h.add_output(o)}let x=0n,k=h.get_noutputs();for(const t of Array(k).keys()){var O;x+=(null==(O=h.get_output(t))?void 0:O.get_satoshis())||0n}const b=e.from_string(g).get_locking_script(),S=Math.ceil(u*(h.get_size()+B+I)),T=BigInt(c.satoshis)-x-BigInt(S);if(T<0)throw new Error("Inadequate satoshis for fee");if(T>0){let t=new s(BigInt(T),b);h.add_output(t)}const P=null==d?void 0:d.idKey,E=null==d?void 0:d.keyHost;if(P){const t=new l(h),{signedTx:o}=t.sign(P);h=o}else if(E){const t=null==d?void 0:d.authToken,o=new l(h);try{const{signedTx:n}=await o.remoteSign(E,t);h=n}catch(t){throw console.log(t),new Error("Remote signing to "+E+" failed")}}const j=h.sign(_,r.ALL|r.FORKID,0,t.from_asm_string(c.script),BigInt(c.satoshis));return w.set_unlocking_script(t.from_asm_string(`${j.to_hex()} ${_.to_public_key().to_hex()}`)),h.set_input(0,w),h},$=async(c,a,_,l,g,u,p,f,d,m=[])=>{let h=new o(1,0),w=new n(i.from(a.txid,"hex"),a.vout,t.from_asm_string(""));h.add_input(w);let y,$=new n(i.from(c.txid,"hex"),c.vout,t.from_asm_string(""));h.add_input($);const x=e.from_string(p);y=null!=f&&f.dataB64&&null!=f&&f.contentType?v(x,f.dataB64,f.contentType,d):x.get_locking_script();let k=new s(BigInt(1),y);h.add_output(k);for(let t of m){let o=new s(t.amount,e.from_string(t.to).get_locking_script());h.add_output(o)}let O=0n,b=h.get_noutputs();for(const t of Array(b).keys()){var S;O+=(null==(S=h.get_output(t))?void 0:S.get_satoshis())||0n}const T=e.from_string(l).get_locking_script(),P=Math.ceil(g*(h.get_size()+B+2*I)),E=BigInt(c.satoshis)-O-BigInt(P);let j=new s(E,T);h.add_output(j);const A=h.sign(u,r.InputOutput,0,t.from_asm_string(a.script),BigInt(a.satoshis));w.set_unlocking_script(t.from_asm_string(`${A.to_hex()} ${u.to_public_key().to_hex()}`)),h.set_input(0,w);const F=h.sign(_,r.InputOutput,1,t.from_asm_string(c.script),BigInt(c.satoshis));return $.set_unlocking_script(t.from_asm_string(`${F.to_hex()} ${_.to_public_key().to_hex()}`)),h.set_input(1,$),h},x=async(e,c,a,_)=>{const l=new o(1,0);let g=0;for(let t of e||[])g+=t.satoshis;const u=g-_;console.log({feeSats:_,satsIn:g,satsOut:u}),l.add_output(new s(BigInt(u),a.get_locking_script()));let p=0;for(let o of e||[]){console.log({u:o});const e=new n(i.from(o.txid,"hex"),o.vout,t.from_asm_string(""));console.log({inx:e}),e.set_satoshis(BigInt(o.satoshis)),l.add_input(e);const s=l.sign(c,r.InputOutputs,p,t.from_asm_string(o.script),BigInt(o.satoshis));e.set_unlocking_script(t.from_asm_string(`${s.to_hex()} ${c.to_public_key().to_hex()}`)),l.set_input(p,e),p++}return l},I=107,k=148,B=34;export{k as P2PKH_FULL_INPUT_SIZE,I as P2PKH_INPUT_SCRIPT_SIZE,B as P2PKH_OUTPUT_SIZE,v as buildInscription,w as buildReinscriptionTemplate,y as createOrdinal,$ as sendOrdinal,x as sendUtxos};
//# sourceMappingURL=index.modern.js.map
